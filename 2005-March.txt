From aw-confirm at eBay.com  Wed Mar  2 04:15:26 2005
From: aw-confirm at eBay.com (eBay Billing Department team)
Date: Tue, 1 Mar 2005 22:15:26 -0500 (EST)
Subject: [Denu-devel] [TKO] : your ebay account could be suspended
Message-ID: <200503020315.j223FQds041885@hapi505-uh.vsurf.com>

An HTML attachment was scrubbed...
URL: <https://lists.berlios.de/pipermail/denu-devel/attachments/20050301/8736aaa1/attachment.html>

From sahdash at sohu.com  Sat Mar  5 08:06:16 2005
From: sahdash at sohu.com (dasf)
Date: Sat, 5 Mar 2005 15:06:16 +0800
Subject: [Denu-devel] =?GB2312?B?gUaCoILIgr2CzJBskLaCzJNdi0CBSQ==?=
Message-ID: <200503050706.j25769N26576@bat.berlios.de>

????????????????????????????????????????

???????????????????????A
?w?_?????????x?????????????????????H
???????s???????????????????????????B
?????A?s???????????????????????I
http://fresh-lime.net/ps/to-roku/

????????????????????????????????????????

?l?????]?@???A???O???????????????????B
?????????K???????????F????
?????B?E?B?E???B?E?B???E???B?E???E?B 
http://fresh-lime.net/ps/to-roku/

????????????????????????????????????????

?z?M???~???]???????????????????B
simonyvs at yahoo.com 


From adfsdfaaaax at excite.co.jp  Sun Mar  6 01:02:57 2005
From: adfsdfaaaax at excite.co.jp (sadfavbvnm)
Date: Sun, 6 Mar 2005 08:02:57 +0800
Subject: [Denu-devel] =?GB2312?B?gUaCoILIgr2CzJBskLaCzJNdi0CBSQ==?=
Message-ID: <200503060002.j2602qN18916@bat.berlios.de>

????????????????????????????????????????

???????????????????????A
?w?_?????????x?????????????????????H
???????s???????????????????????????B
?????A?s???????????????????????I
http://fresh-lime.net/ps/to-roku/

????????????????????????????????????????

?l?????]?@???A???O???????????????????B
?????????K???????????F????
?????B?E?B?E???B?E?B???E???B?E???E?B 
http://fresh-lime.net/ps/to-roku/

????????????????????????????????????????

?z?M???~???]???????????????????B
simonyvs at yahoo.com 


From rnbfgs at yahoo.com  Mon Mar  7 06:27:06 2005
From: rnbfgs at yahoo.com (safavbx)
Date: Mon, 7 Mar 2005 13:27:06 +0800
Subject: [Denu-devel] =?GB2312?B?gUaVc5LoivqYQY3ag0eDYoNggsiDZ4OKg3KDQYFIgUk=?=
Message-ID: <200503070527.j275R0N24847@bat.berlios.de>

==================================

?????H?I???????I
?????????I?I?I
???????G?w???l???????G?b?`???g???r?A??
???????g???r?A?????????`?H?H?H
http://zebra-color.info/ps/that2v2/

==================================

????????????
marc_honore at yahoo.com
???????[???????????B

==================================


From rnbfgs at yahoo.com  Tue Mar  8 06:24:05 2005
From: rnbfgs at yahoo.com (safavbx)
Date: Tue, 8 Mar 2005 13:24:05 +0800
Subject: [Denu-devel] =?GB2312?B?gUaCsYLqgsWCoILIgr2C4INMg4ODb4/sgsmDgoNlg4KDZYLIgs2CuIFJgUk=?=
Message-ID: <200503080524.j285O0N04931@bat.berlios.de>

==================================

?????????O?e?I?????????????????B?B?B
???????????????m?b?????????g???????????????I
http://zebra-color.info/ps/that2v3/
?????????????I?????????U?????????I
?L???o???????q???????I
?s?????????Z?t?????I?_?????????????R???I
?????????m???????????R???I
http://zebra-color.info/ps/that2v3/
?????????m???????????????j???????????????h?????????????B

==================================

????????????
marc_honore at yahoo.com
???????[???????????B

==================================



From asdfaw at cello.ocn.ne.jp  Wed Mar  9 17:16:13 2005
From: asdfaw at cello.ocn.ne.jp (sadfa)
Date: Thu, 10 Mar 2005 00:16:13 +0800
Subject: [Denu-devel] =?GB2312?B?gUaCsYLMiVyBRZNzjnOTYJDggvCCoILIgr2CzYKykbaSbYKpgUmBSA==?=
Message-ID: <200503091616.j29GGBN08923@bat.berlios.de>

?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/
???X?????????????\???s?s?`?????????????B
???????????????????????????????v???B
?????O???????????????????????????????????\???s?s?`?????b????????????????
http://sunstory.info/ps/uwasa/
???????????n?????????u???????????????\???s?s?`???????v???????B
?????????????\???s?s?`?????????????L??????????!!
http://sunstory.info/ps/uwasa/

?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/

?s?s?`?????????????????????????????????I
???????????????????????B
paulresis at yahoo.com


From zcfas at guitar.ocn.ne.jp  Thu Mar 10 18:44:13 2005
From: zcfas at guitar.ocn.ne.jp (sada)
Date: Fri, 11 Mar 2005 01:44:13 +0800
Subject: [Denu-devel] =?GB2312?B?gUaQoorUgsyVc5fPjpaP7oFCkmqPl4KqgqCC6YLtgq+CyILxgr6CqYLngWM=?=
Message-ID: <200503101744.j2AHi9N26985@bat.berlios.de>



?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`
?????????E???????s???????????????c?????????????????H
???I?H?E???????j???????????I?H?????????????????H
?E?????????????????????s?????????@???????????????I?H
http://downtown-office.at/ps/furitai/
???????????X???l???????i???p?????????S?R?y?I?I
?e???N???H?~???????????????c
?Z???N???H?????????????????????????`
?L???o???H???????????????????????????????????I?I?c?O?`???I???????I?I
???????????????O?????????@?`?????????H
http://downtown-office.at/ps/furitai/
?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`
???????????????l??????????
aimejyon at yahoo.com


From shux_linux at comcast.net  Fri Mar 11 09:30:24 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Fri, 11 Mar 2005 00:30:24 -0800
Subject: [Denu-devel] Denu 2.3.1
Message-ID: <42315720.4050307@comcast.net>

Well everyone (blubb), denu 2.3.1 has been released and it features 
gnome 2.3.1 support which should also translate over to KDE 3.4 support 
since they are also standardizing.  Among other things 2.3.1 features a 
rework of the ebuild, support for non-portage based distributions, some 
code cleanup and nicer looking outputted menus.  Thanks everyone.
~Scott


From asfas at mail.goo.ne.jp  Fri Mar 11 16:20:46 2005
From: asfas at mail.goo.ne.jp (safa)
Date: Fri, 11 Mar 2005 23:20:46 +0800
Subject: [Denu-devel] =?GB2312?B?gUaC8YFIgvGBSILxgUiPl4LMg1KCzIKmgsGCv4LIkcyMsZBskJSBSIFI?=
Message-ID: <200503111520.j2BFKgN31121@bat.berlios.de>

?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`
?j?????????l?????????????????I?H???^?????????????????l???????????c
?????????^???????????????D?????????????I
?????????D?????^?C?v???????H
???????????????????????????????H
?????????y???????????????????B
http://beauti-channel.com/a-t/
???????????????????????l???????????????????c???????????????????I?H
?q???????????x??????????????????
?????????c?????????????v?????????????A???????I?I
???????????c?U???????????????????????????c???????????????????c
http://beauti-channel.com/a-t/
?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`
???????????o?q??????????
?N???W?b?g?J?[?h???V???b?s???O?g????????
?????X?s?v?E???R???E???_???E???????U????
???J?[?h???????????????v
?????d?b???????\??
http://59862777.com/
?????????????????A???X???x???????z?????????????I?X?X???????B
?????????????????Z????????????????
???????????o?q??????????
?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`?E?`
?C?????????????????????C?????????M?????c
paulresis at yahoo.com


From zcfas at hotmail.co.jp  Sat Mar 12 23:26:34 2005
From: zcfas at hotmail.co.jp (sada)
Date: Sun, 13 Mar 2005 06:26:34 +0800
Subject: [Denu-devel] =?GB2312?B?gUaDWYNvg4qCqIvggsWCtYLlgUmBSQ==?=
Message-ID: <200503122226.j2CMQVN00631@bat.berlios.de>

?`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`??
?`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`??
?K?^?????I?H?????????????I?d???????????I?????????????I
???????~???????????????????????????????????K?^?????????I
???????????????????????p?`???R???????????A?n???????????????????????????????????H
http://free-contents.com/senkin/
???????K?^???E???????@?????????????????B
???????????????????P???????@???????????I?H
http://free-contents.com/senkin/
?`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`??
?`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`???`??
?z?M????????????????
almel_jean at yahoo.com


From mattkyn at gmail.com  Mon Mar 14 06:04:55 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Mon, 14 Mar 2005 05:04:55 +0000
Subject: [Denu-devel] OK, I signed up...
Message-ID: <e7ba781d05031321044e14f121@mail.gmail.com>

Hola!

Not quite sure what I'm doing here, except I was bugging you lots on
the gentoo forums.

I think Denu has real potential - a menu editor that makes it easy to
take your setup from one WM to another has got to be a winner.

But I've got pretty dogmatic UI ideas. When I fire it up first time, I
want to see the existing menu for the WM I'm currently running as a
tree structure. Then I want to right-click on things to add, edit and
delete. I want a File > Import menu item to let me suck in the menu
from another WM, and a File > Export to save them for another WM.

Tell me to piss off if you don't agree.

Backend-wise that core shouldn't be difficult. Internally for Denu the
menu itself is just an object tree: once the API for that's sorted and
the UI is working, all the work is writing the import/export
functions. And from what I can tell, you've gone a long way to getting
that part down. Make that part modular and other people will find it
easy to contribute a plugin for their wm-de-jour.

I'm only just getting my head round the freedesktop.org menuing spec.
Like most specs, it stinks of being written by a committee. But that
doesn't make it bad - if the internal object model of Denu supports
that, with all it's OnlyIn and Exclude crap, you know it will support
just about anything another WM could throw at it.

Right now I'm between freelance gigs. I'm happy to brainstorm and do
stuff while that lasts. Like I said on one of my posts, I'm a
programmer, but not a python programmer. But from what I've seen from
the pyxdg sample scripts though, this stuff just doesn't look
impossible.

Anyway, let me know what your thoughts for Denu are.

Matt


From shux_linux at comcast.net  Mon Mar 14 08:49:10 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Sun, 13 Mar 2005 23:49:10 -0800
Subject: [Denu-devel] OK, I signed up...
In-Reply-To: <e7ba781d05031321044e14f121@mail.gmail.com>
References: <e7ba781d05031321044e14f121@mail.gmail.com>
Message-ID: <423541F6.6000205@comcast.net>

Matt Kynaston wrote:

>Hola!
>
>Not quite sure what I'm doing here, except I was bugging you lots on
>the gentoo forums.
>
>I think Denu has real potential - a menu editor that makes it easy to
>take your setup from one WM to another has got to be a winner.
>
>But I've got pretty dogmatic UI ideas. When I fire it up first time, I
>want to see the existing menu for the WM I'm currently running as a
>tree structure. Then I want to right-click on things to add, edit and
>delete. I want a File > Import menu item to let me suck in the menu
>from another WM, and a File > Export to save them for another WM.
>
>Tell me to piss off if you don't agree.
>
>Backend-wise that core shouldn't be difficult. Internally for Denu the
>menu itself is just an object tree: once the API for that's sorted and
>the UI is working, all the work is writing the import/export
>functions. And from what I can tell, you've gone a long way to getting
>that part down. Make that part modular and other people will find it
>easy to contribute a plugin for their wm-de-jour.
>
>I'm only just getting my head round the freedesktop.org menuing spec.
>Like most specs, it stinks of being written by a committee. But that
>doesn't make it bad - if the internal object model of Denu supports
>that, with all it's OnlyIn and Exclude crap, you know it will support
>just about anything another WM could throw at it.
>
>Right now I'm between freelance gigs. I'm happy to brainstorm and do
>stuff while that lasts. Like I said on one of my posts, I'm a
>programmer, but not a python programmer. But from what I've seen from
>the pyxdg sample scripts though, this stuff just doesn't look
>impossible.
>
>Anyway, let me know what your thoughts for Denu are.
>
>Matt
>_______________________________________________
>Denu-devel mailing list
>Denu-devel at lists.berlios.de
>http://lists.berlios.de/mailman/listinfo/denu-devel
>
>  
>
Matt,
I cannot express my gratitude for your criticism.  I agree that denu has 
a lot of potential.  Your ideas are very good ones.  The core of denu is 
in place (besides the import function) and its a matter now of focussing 
on the UI of denu.  I like the idea of it automatically importing the 
current menu.  There is pontential in that idea. 

However, I think that you are discounting how tough the import/export 
functions are to get right.  The idea of modularization is already 
present.  If you look in /usr/share/denu/wm you will see the files.  The 
tough part comes in the different styles menus are saved.  The majority 
of window managers use a single text file, example openbox/fluxbox. 
Others use a single text file for all of the configs, keybindings etc. 
example waimea (I believe).  Then there is the desktop menu spec in 
which the menu is generated from .desktop files in combination with a 
file which specifies categories and what to include and not include.  
examples gnome/kde(as of 3.4)  Xfce4 on the other hand is a combination 
of the two, its menu is stored in a file and all of the menu entry's 
info can be stored in that file or a simple tag can be added to include 
the desktop menu spec generated menu.  Enlightenment 16 stores its menus 
by keeping a menu file for each directory in the menu and then combining 
the files.  I think you get my point.  What it boils down to is three 
types, directory structured, file based and freedesktop spec.

Now the freedesktop spec has a wrinkle that need sto be ironed out in 
the way it determines order.  For each directory a <layout> tag must be 
included to order the entries.  This definition is separate from the 
<include> tag to include files.

Now don't discount yourself because you seem to be more of a 
programmer.  I'm a self taught programmer and denu is my first venture 
into python. I know I shouldn't admit that but it is.  Since I'm going 
to admit that I might as well state that I'm an 18 year old high school 
senior.  Ah, the wonders of the internet.  With that aside I put alot of 
time, generally in chunks into denu and intend to continue working on it 
because its an itch I thought needed to be scratched.  None of the other 
menu generation programs were up to snuff.

Also, a note.  If anyone happens to be a real/more experienced 
programmer than I and you read this (probably in the future) please 
critique my code.  Like I said I wrote denu as first of the language 
project.  Its main purpose is to learn from.

Thanks,
Scott



From zcfa at mui.biglobe.ne.jp  Mon Mar 14 11:30:06 2005
From: zcfa at mui.biglobe.ne.jp (sada)
Date: Mon, 14 Mar 2005 18:30:06 +0800
Subject: [Denu-devel] =?GB2312?B?gUaBYInviPWCzIpGl2yC1oLMgrKIxJPggWA=?=
Message-ID: <200503141030.j2EATpN11698@bat.berlios.de>

_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
?????????t???????I?H
?????????????????????????????????????????????B
?V?????????????????????????????????l??
?V?????????????????????????B
?????????????R?~???j?e?B?T?C?g?????B
?S???????????y?????????????B
http://lover-kiss.com/lovelove-de/
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

?z?M???~????????
paulresis at yahoo.com


From shux_linux at comcast.net  Tue Mar 15 01:04:04 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Mon, 14 Mar 2005 16:04:04 -0800
Subject: [Denu-devel] OK, I signed up...
In-Reply-To: <e7ba781d05031407516940a6d7@mail.gmail.com>
References: <e7ba781d05031321044e14f121@mail.gmail.com>	 <423541F6.6000205@comcast.net> <e7ba781d05031407516940a6d7@mail.gmail.com>
Message-ID: <42362674.9080600@comcast.net>

Matt Kynaston wrote:

>>However, I think that you are discounting how tough the import/export
>>functions are to get right.  
>>    
>>
>
>Probably - but I said 'not impossible', not 'easy' ;)
>
>I'm currently putting together a bit for Tips & Tricks on manually
>editing a Gnome 2.10 menu. That'll teach me more about the spec, plus
>the hiccups that Denu will encounter and can fix. For example, right
>now it looks like if an icon doesn't exist in a theme, nothing gets
>displayed. And gnome-2.10 is strict about valid .desktop files, which
>is why XMMS isn't showing up in my menu any more. There's a couple of
>little progs in desktop-file-utils that can help, but they're
>undocumented.
>
>I've had a once over of the Denu code. I'll prob have more questions
>later, and with the comments here please keep in mind I have no idea
>what I'm talking about!
>  
>
I apprecite your help so I'll be tolerant. :-D

>Am I right in thinking that the internal representation of the menu is
>are the various TreeStore objects? And that these basically get
>serialised and unserialised (cPickled) when saving and loading?
>  
>
Yes the menu is stored in a TreeStore object with the saved files just 
being serialized objects.

>If so, I'm wondering how flexible this is long term. It looks to me
>like the structure of the tree (the columns) is defined when it's
>created. But what if you later decide to handle all the i18n stuff in
>the freedesktop spec - you'd suddenly have a variable (or huge) number
>of cols. Can you store objects in the tree? If so, would it make sense
>to make an application object - analagous to a .desktop entry - to put
>in the tree?
>
>  
>
I'd assume so seeing as now I store a pixbuf in the treestore.  So I 
assume an object could be added.  You'd have to help with that because 
I've never used objects, I use arrays and lists.  If I'm making a fool 
of myself forgive me.

>I also don't understand why there's a separate store for menu icons.
>What problem is that solving?
>  
>
Its not solving any problem, its just a result of me adding it later.  
I'm assuming you are referring to the definitions as downloaded from the 
website.

>But my gut is telling me that the TreeStore object is actually the
>wrong thing to be keeping menus in. I could be wrong, but to me it
>just looks too much like a presentational object. Would it be better
>to use the Menu object from pyxdg internally, perhaps extending it
>with a .toTreeStore() method for the actual rendering? That way you'd
>be handling the most complicated case 'natively' and are not
>reinventing any wheels.
>
>  
>
We could do that.  However we'd have to make sure that we are not making 
denu prioritize the freedesktop spec over other window managers.  (I use 
fluxbox.)

>Anyways, those are my thoughts. I'll get on with the gnome menus for
>now and let you know of what I run into.
>
>Matt
>
>  
>
Thanks and if you need any help with the gnome menu I know quite a bit.  
If there one thing I have grasped by doing this is how each WM/DE's 
menus run, or atleast get their structure.
~Scott


From mattkyn at gmail.com  Wed Mar 16 02:41:46 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Wed, 16 Mar 2005 01:41:46 +0000
Subject: [Denu-devel] interesting freedesktop thread
Message-ID: <e7ba781d05031517414a8796da@mail.gmail.com>

http://lists.freedesktop.org/archives/xdg/2005-February/005937.html

Discussion between the gnome-menu-edit and kmenuedit guys about how to
handle multiple files from different editors in
$XDG_CONFIG_HOME/menus/applications-merged/

The issue is that there's no way to specify the order in which the
files there are loaded, so no way to guarantee how the final menu will
turn out.

They seem to decide to standardize on applications-menuedit.menu. They
also talk about the difference between the Name of the top level menu
node - currently "Applications" in Gnome and "KDE" in KDE. Looks like
they're standardizing on "Applications".

Matt


From shux_linux at comcast.net  Wed Mar 16 07:10:08 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Tue, 15 Mar 2005 22:10:08 -0800
Subject: [Denu-devel] OK, I signed up...
In-Reply-To: <e7ba781d05031518203c6b49ee@mail.gmail.com>
References: <e7ba781d05031321044e14f121@mail.gmail.com>	 <423541F6.6000205@comcast.net>	 <e7ba781d05031407516940a6d7@mail.gmail.com>	 <42362674.9080600@comcast.net>	 <e7ba781d050315041734926a48@mail.gmail.com>	 <42378AE2.2040506@comcast.net> <e7ba781d05031518203c6b49ee@mail.gmail.com>
Message-ID: <4237CDC0.7050805@comcast.net>

Matt Kynaston wrote:

>>There you can see what denu supports.
>>    
>>
>
>Great. Do you know if any of the WMs support user-specified icons for
>folders? In Gnome/KDE that's set by the theme, so it's not part of the
>pyxdg stuff, but if anyone else uses them it'd be something we'd have
>to support. And how about Accelerator keys?
>  
>
As far as I know, all of the window managers including Gnome/KDE its a 
matter of absolute file names in the .directory files.  We'd also have 
to look into supporting themes via .directory files because as of now 
its just done by user definition.  Accelerator keys? Enlighten me.

> 
>  
>
>>Also, I also intend on using a glade definition to remove much of the
>>gui definition from the code.
>>    
>>
>
>Was just reading up on those :)
>
>Mostly I've been cramming my head with all the Python I can. It's
>pretty cool, though structurally some stuff is pretty alien to me
>(where have all my curly braces gone?!)
>
>I'm gradually coming up with ideas for the menu classes I mentioned,
>but I'm still undecided whether they'd be best completely based on
>pyxdg or merely similar.
>  
>
Python was a pretty smooth transition for me since I moved from PHP.

> 
>  
>
>>We also need to consider other window managers we want to support
>>because some may not be worth it.
>>    
>>
>
>Dunno. I think if Denu catches on and we make extending it easy,
>people can contribute the load/save stuff for whatever WM they want.
>The trick is making sure that behind the scenes it can handle all
>menuing things a WM might reasonably throw at it.
>  
>
Yes, and that will be a tough part.  An example would be fvwm because I 
believe the menu config is kept with all of the other settings in one 
file.  Another WM I need to look into further is e17.  I'm not sure how 
menus are handled within it.  Do we also want to include support for 
panels? Ex: pypanel, fbpanel.

>Should each WM be a separately-installed module? That would allow each
>one to have it's own properties dialog for editing applications - ie
>if the WM didn't support icons, the user wouldn't see the option. Just
>a thought - not 100% how to implement something like that.
>  
>
I think that a separate module is okay, such as it is now.  However, I 
think that a separate properties box is misleading/not possible with the 
current code because the WM being used is not detected by denu, the user 
selects which WM to generate for.

>What's your sense about the acceptance of the freedesktop.org spec -
>do you think other WMs will migrate to it eventually?
>
>  
>
Good question.  My gut says eventually yes, but it will not be urgent.  
I say that because the text files, especially the xml ones are really 
easy to work with.  To say where its headed I'd say look at Xfce4, the 
user has the option to use the freedesktop spec if they want.  Or the 
user can just use the xml file.  What the freedesktop standards do is 
not only standardize the menus in gnome and KDE but also shifts the 
responsibility of including a program in the menu from the window 
manager to the developer/packager of the program.  I know that this is 
especially apparent now as the standard is just now introduced. 

I think that the single text file is not going to be obsolete for 
another reason.  The power user.  I know for a fact that not all users 
like GUI menu editors.  Look at this poll I posted originally when I 
started denu. 
http://forums.gentoo.org/viewtopic-t-218634-highlight-denu.html
11 users, 14% said its easy enough to edit by hand.  With the 
introduction of the freedesktop spec menu editing by hand is not easy. 
Period.  Program information is stored in .desktop files, directory 
information in .directory files and brought together by one or multiple 
.menu files.  This does not cater to those who do hand config.

>Certainly seems to be having a few teething trouble with the latest
>KDE and Gnomes anyway ;)
>
>Matt
>
>  
>
    Overall, I think the freedesktop specs create a better environment 
for new users and a more frustrating one for power users.  The specs 
solve problems apparent with many menu generation programs because the 
management is left to the package manager/the developer.  These problems 
include missing a program, having a wrong bit of information and in the 
case of editing by hand, not knowing what the executable(s) were named. 

    My response to these drawbacks was denu and it compensates for 
missing programs by being able to add them to denu which in turn submits 
it to the online database so the next time someone has the program it 
wont be missing.  This update via the internet also allows for 
'definitions' to be updated separate from the program, no emerge -u denu 
for a program update.  The definitions ability to be updated also allows 
the menu to update according to information. (However once an entry is 
in the menu portion it is untouched by denu and only edited by the 
user.)  The definitions also make knowing the executable not required.  
One only needs to know that in the case a program is not in the database.

    Another advantage of denu, since I'm on that, for gentooers is that 
it shows all programs that have a potential to be in a menu even if its 
not in the world file.

Thats a lot.  Thanks for your help.
~Scott


From mattkyn at gmail.com  Wed Mar 16 12:37:52 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Wed, 16 Mar 2005 11:37:52 +0000
Subject: [Denu-devel] OK, I signed up...
In-Reply-To: <4237CDC0.7050805@comcast.net>
References: <e7ba781d05031321044e14f121@mail.gmail.com>
	 <423541F6.6000205@comcast.net>
	 <e7ba781d05031407516940a6d7@mail.gmail.com>
	 <42362674.9080600@comcast.net>
	 <e7ba781d050315041734926a48@mail.gmail.com>
	 <42378AE2.2040506@comcast.net>
	 <e7ba781d05031518203c6b49ee@mail.gmail.com>
	 <4237CDC0.7050805@comcast.net>
Message-ID: <e7ba781d05031603371071a016@mail.gmail.com>

> As far as I know, all of the window managers including Gnome/KDE its a
> matter of absolute file names in the .directory files.  We'd also have
> to look into supporting themes via .directory files because as of now
> its just done by user definition.  

Themes, yes, grrr... pyxdg includes a theme handling class,
IconTheme.py - haven't really looked at it. I guess the user will need
a way (simple checkbox?) when selecting an icon to indicate whether
they want it to change with the theme (in which case it's a relative
path - ie 'gvim.svg') or an absolute one. Again, this will differ
between WMs.
 
> Accelerator keys? Enlighten me.

Alt+F, Alt+S and stuff.

> Another WM I need to look into further is e17.

That's one I _do_ have installed! The menus are directory based
(everything lives in ~/.e/e/applications) but uses a binary format for
each application file. Can't say I've looked at it much. I just used a
bunch of prebuilt eapp binary files and tutorial at:
http://aje.codewordt.co.uk/Files_files/applications.tar.gz

There's also e_utils - a bunch of utils to help create those binaries
- prob should begin with those for real integration, so we're not
limitted to what's in the tarball.

But that raises another question that's been at the back of my head -
dependencies. You don't want people to have to install e_utils if
they're not going to touch e17. Same sort of thing with pyxdg, really,
though it doesn't depend on anthing other than python so is prob OK.
Only two ways around it though: 1) rewrite or lift all the stuff
that's in them or 2) Have separate modules (with their own
dependencies) for each WM.

But back to the e17 setup - the same format and general layout is used
by the applications menu, Engage and IBar. I know some people use
Engage with other WMs, so once we've got it cracked, that's a couple
of panels down...

> Do we also want to include support for
> panels? Ex: pypanel, fbpanel.

I guess yes, eventually it'd be good.

> Good question.  My gut says eventually yes, but it will not be urgent.

Yeah. If I were a WM developer I'd stick with what I'd got until the
dust settled a bit.

Interesting what you say about power users. I know one of the things
that the corporate sys admins (my brother's one) want is the ability
to "lock down" menus, so users cannot change them. Don't think any of
the menuing systems support this yet.

>     My response to these drawbacks was denu and it compensates for
> missing programs by being able to add them to denu which in turn submits
> it to the online database so the next time someone has the program it
> wont be missing.  

Yeah, it's a great idea. Haven't even looked at how you handle this
yet. Does SysUpdate query portage for installed apps, or look for
binaries directly?

Matt


From mattkyn at gmail.com  Wed Mar 16 14:01:13 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Wed, 16 Mar 2005 13:01:13 +0000
Subject: [Denu-devel] RFC: Modularizing WM Functionality
Message-ID: <e7ba781d05031605011abbd58c@mail.gmail.com>

Hi,

Regarding recent discussion on how to handle all possible WMs, and now
possibly panels too: these are the challenges I see:

    1. Make it easy for us to maintain all the different possibilities for WMs 
        and panels
    2. Make it easy for 3rd parties to contribute their own WM/panel code
    3. Make it possible to add a new WM to Denu without reinstalling the 
        entire program
    4. Make it possible for Denu to know the capabilities of a given WM/panel
    5. Avoid requiring any WM-specific dependencies if a user doesn't have 
        that WM installed

Basically, I'd like to modularize WM management more than it is
already. All of the code below is for illustrative purposes only, but
here's how I've seen stuff like this done before...

Create a base (or skeleton) class, WM. This contains no functionality
of it's own except for creating subclasses, but defines an API that
all Denu-compliant WM modules must follow. Right now, it'd look
something like:

class WM:
"""Skeleton class for all WM-specific functionality"""

    # a dictionary defining the WM's capabilities
    capabilities = {}   

    def __init__(self):
    """Initialise the WMs capabilities"""
        self.capabilities = dict()                           # not
capable of anything

    def factory(type):
    """Returns a WM instance of given type"""
        return eval(type + '()')
    factory = staticmethod(factory)

    def load(self):
    """Returns the existing menu"""
        raise WMError 'Not implemented'

   def save(self, menu):
   """Save the given menu in the WMs format
       
       Returns true if save was successful"""
       raise WMError 'Not implemented'

A specific WM module would comprise a single file, containing a
subclass of WM. The developer would fill in the code required for the
load() and save() methods and say what the WM is capable of:

class Gnome(WM):
"""Gnome-specific WM functionality"""

    def __init__(self):
        WM.__init__(self)                            # inherit default
capabilities
        self.capabilities['themes'] = True  # Gnome can do themes
        # add other capabilities

    def load(self):
        menu = Menu();
        # ...add  stuff to menu...
        return menu

    def save(self, menu):
        # ...save the menu...
        return True

When a WM module is installed, it's capabilities are added to a Denu
Registry object, which is pickled and loaded at program startup. By
examing the Registry, Denu always knows which WMs (or panels) have
been installed, and what each can do.

Because the API is identical for all WMs, the rest of Denu doesn't
need to know any more about it, all it does when it needs to perform
WM-specific operations is intantiate one of the required type and call
a method:

    wm = WM.factory('Gnome')
    wm.save(menu)

Obviously there's other stuff that might need to be added to the basic
WM API - getVersion() springs to mind, but I haven't a clue whether
it's really needed. We'd need to iron those out, along with a list of
WM capabilities that each class should define.

Let me know what you think.

Matt


From mattkyn at gmail.com  Wed Mar 16 14:05:37 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Wed, 16 Mar 2005 13:05:37 +0000
Subject: [Denu-devel] Fwd: pyxdg - writing applications-merged .menu files
In-Reply-To: <200503161225.22715.h_wendel@cojobo.net>
References: <e7ba781d0503151826538e2dab@mail.gmail.com>
	 <200503161225.22715.h_wendel@cojobo.net>
Message-ID: <e7ba781d05031605056d773135@mail.gmail.com>

Too bad - was hoping someone had written this part for us!

M

---------- Forwarded message ----------
From: Heinrich Wendel <h_wendel at cojobo.net>
Date: Wed, 16 Mar 2005 12:25:22 +0100
Subject: Re: pyxdg - writing applications-merged .menu files
To: Matt Kynaston <mattkyn at gmail.com>
Cc: xdg at lists.freedesktop.org


On Wednesday 16 March 2005 03:26, Matt Kynaston wrote:
> Hi,
>
> I've been looking at incorporating pyxdg into a project that's aiming
> to provide a cross-Window Manager menu editing app.
>
> pyxdg is great for reading xdg menus, but do you know of any
> pyxdg-based progs that have implemented saving an altered menu? Is
> this something that should be incorporated into pyxdg itself, or
> remain separate?

PyXDG is currently is not able to edit Menus and it's a not trivial to add. I
currently have no time do implement it, but I think it should be part of
pyxdg. So I'm open for patches of course :-)

>
> Regards,
>
> Matt
mfg, heinrich


From shux_linux at comcast.net  Thu Mar 17 01:03:23 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Wed, 16 Mar 2005 16:03:23 -0800
Subject: [Denu-devel] RFC: Modularizing WM Functionality
In-Reply-To: <e7ba781d05031605011abbd58c@mail.gmail.com>
References: <e7ba781d05031605011abbd58c@mail.gmail.com>
Message-ID: <4238C94B.5060501@comcast.net>

Matt Kynaston wrote:

>Hi,
>
>Regarding recent discussion on how to handle all possible WMs, and now
>possibly panels too: these are the challenges I see:
>
>    1. Make it easy for us to maintain all the different possibilities for WMs 
>        and panels
>    2. Make it easy for 3rd parties to contribute their own WM/panel code
>    3. Make it possible to add a new WM to Denu without reinstalling the 
>        entire program
>    4. Make it possible for Denu to know the capabilities of a given WM/panel
>    5. Avoid requiring any WM-specific dependencies if a user doesn't have 
>        that WM installed
>
>Basically, I'd like to modularize WM management more than it is
>already. All of the code below is for illustrative purposes only, but
>here's how I've seen stuff like this done before...
>
>Create a base (or skeleton) class, WM. This contains no functionality
>of it's own except for creating subclasses, but defines an API that
>all Denu-compliant WM modules must follow. Right now, it'd look
>something like:
>
>class WM:
>"""Skeleton class for all WM-specific functionality"""
>
>    # a dictionary defining the WM's capabilities
>    capabilities = {}   
>
>    def __init__(self):
>    """Initialise the WMs capabilities"""
>        self.capabilities = dict()                           # not
>capable of anything
>
>    def factory(type):
>    """Returns a WM instance of given type"""
>        return eval(type + '()')
>    factory = staticmethod(factory)
>
>    def load(self):
>    """Returns the existing menu"""
>        raise WMError 'Not implemented'
>
>   def save(self, menu):
>   """Save the given menu in the WMs format
>       
>       Returns true if save was successful"""
>       raise WMError 'Not implemented'
>
>A specific WM module would comprise a single file, containing a
>subclass of WM. The developer would fill in the code required for the
>load() and save() methods and say what the WM is capable of:
>
>class Gnome(WM):
>"""Gnome-specific WM functionality"""
>
>    def __init__(self):
>        WM.__init__(self)                            # inherit default
>capabilities
>        self.capabilities['themes'] = True  # Gnome can do themes
>        # add other capabilities
>
>    def load(self):
>        menu = Menu();
>        # ...add  stuff to menu...
>        return menu
>
>    def save(self, menu):
>        # ...save the menu...
>        return True
>
>When a WM module is installed, it's capabilities are added to a Denu
>Registry object, which is pickled and loaded at program startup. By
>examing the Registry, Denu always knows which WMs (or panels) have
>been installed, and what each can do.
>
>Because the API is identical for all WMs, the rest of Denu doesn't
>need to know any more about it, all it does when it needs to perform
>WM-specific operations is intantiate one of the required type and call
>a method:
>
>    wm = WM.factory('Gnome')
>    wm.save(menu)
>
>Obviously there's other stuff that might need to be added to the basic
>WM API - getVersion() springs to mind, but I haven't a clue whether
>it's really needed. We'd need to iron those out, along with a list of
>WM capabilities that each class should define.
>
>Let me know what you think.
>
>Matt
>_______________________________________________
>Denu-devel mailing list
>Denu-devel at lists.berlios.de
>http://lists.berlios.de/mailman/listinfo/denu-devel
>
>  
>
I'm having a tough time with this.  Why would you have a completely 
separate class?  Why would you like it more modularized?
~Scott


From shux_linux at comcast.net  Thu Mar 17 01:23:50 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Wed, 16 Mar 2005 16:23:50 -0800
Subject: [Denu-devel] OK, I signed up...
In-Reply-To: <e7ba781d05031603371071a016@mail.gmail.com>
References: <e7ba781d05031321044e14f121@mail.gmail.com>	 <423541F6.6000205@comcast.net>	 <e7ba781d05031407516940a6d7@mail.gmail.com>	 <42362674.9080600@comcast.net>	 <e7ba781d050315041734926a48@mail.gmail.com>	 <42378AE2.2040506@comcast.net>	 <e7ba781d05031518203c6b49ee@mail.gmail.com>	 <4237CDC0.7050805@comcast.net> <e7ba781d05031603371071a016@mail.gmail.com>
Message-ID: <4238CE16.4060308@comcast.net>

Matt Kynaston wrote:

>>As far as I know, all of the window managers including Gnome/KDE its a
>>matter of absolute file names in the .directory files.  We'd also have
>>to look into supporting themes via .directory files because as of now
>>its just done by user definition.  
>>    
>>
>
>Themes, yes, grrr... pyxdg includes a theme handling class,
>IconTheme.py - haven't really looked at it. I guess the user will need
>a way (simple checkbox?) when selecting an icon to indicate whether
>they want it to change with the theme (in which case it's a relative
>path - ie 'gvim.svg') or an absolute one. Again, this will differ
>between WMs.
> 
>  
>
Yes, that would work.

>>Accelerator keys? Enlighten me.
>>    
>>
>
>Alt+F, Alt+S and stuff.
>
>  
>
>>Another WM I need to look into further is e17.
>>    
>>
>
>That's one I _do_ have installed! The menus are directory based
>(everything lives in ~/.e/e/applications) but uses a binary format for
>each application file. Can't say I've looked at it much. I just used a
>bunch of prebuilt eapp binary files and tutorial at:
>http://aje.codewordt.co.uk/Files_files/applications.tar.gz
>
>There's also e_utils - a bunch of utils to help create those binaries
>- prob should begin with those for real integration, so we're not
>limitted to what's in the tarball.
>
>But that raises another question that's been at the back of my head -
>dependencies. You don't want people to have to install e_utils if
>they're not going to touch e17. Same sort of thing with pyxdg, really,
>though it doesn't depend on anthing other than python so is prob OK.
>Only two ways around it though: 1) rewrite or lift all the stuff
>that's in them or 2) Have separate modules (with their own
>dependencies) for each WM.
>
>  
>
Yes, dependencies could quickly become a problem.  Especially in the
case of e17.  I would say that a good way of managing the deps is
needed.  We could rewrite/lift the functions but that would enlarge denu
and if we choose. the WM modules.

>But back to the e17 setup - the same format and general layout is used
>by the applications menu, Engage and IBar. I know some people use
>Engage with other WMs, so once we've got it cracked, that's a couple
>of panels down...
>  
>
That would be a definite plus.  I know from using engage that I would
except the lack of easy configuration turns me off of it.

>  
>
>>Do we also want to include support for
>>panels? Ex: pypanel, fbpanel.
>>    
>>
>
>I guess yes, eventually it'd be good.
>
>  
>
>>Good question.  My gut says eventually yes, but it will not be urgent.
>>    
>>
>
>Yeah. If I were a WM developer I'd stick with what I'd got until the
>dust settled a bit.
>
>Interesting what you say about power users. I know one of the things
>that the corporate sys admins (my brother's one) want is the ability
>to "lock down" menus, so users cannot change them. Don't think any of
>the menuing systems support this yet.
>
>  
>
Seems like the freedesktop spec right now keeps it pretty locked down.
;-)  Unless of course they go through the pain of hand editing or use denu.

>>    My response to these drawbacks was denu and it compensates for
>>missing programs by being able to add them to denu which in turn submits
>>it to the online database so the next time someone has the program it
>>wont be missing.  
>>    
>>
>
>Yeah, it's a great idea. Haven't even looked at how you handle this
>yet. Does SysUpdate query portage for installed apps, or look for
>binaries directly?
>
>Matt
>_______________________________________________
>Denu-devel mailing list
>Denu-devel at lists.berlios.de
>http://lists.berlios.de/mailman/listinfo/denu-devel
>
>  
>
Both.  The sysupdate function uses a variable ( config["portage"] ) to
know if portage exists and if it does it uses the directories in
/var/db/pkg to find whats installed.  If portage is not found it gets a
list of all the files within the $PATH directories and runs them up
against a dict object which corresponds filenames to packages.  That
dict is exec_index.p .  Are you interested in becoming a dev?  IE access
to the svn repository and a rundown of the online dev utils.
~Scott



From shux_linux at comcast.net  Thu Mar 17 03:17:46 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Wed, 16 Mar 2005 18:17:46 -0800
Subject: [Denu-devel] RFC: Modularizing WM Functionality
In-Reply-To: <e7ba781d05031617346da3c5df@mail.gmail.com>
References: <e7ba781d05031605011abbd58c@mail.gmail.com>	 <4238C94B.5060501@comcast.net> <e7ba781d05031617346da3c5df@mail.gmail.com>
Message-ID: <4238E8CA.5080405@comcast.net>

Matt Kynaston wrote:

>On Wed, 16 Mar 2005 16:03:23 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>
>  
>
>>I'm having a tough time with this.  Why would you have a completely
>>separate class?  Why would you like it more modularized?
>>    
>>
>
>Damn web mail - had something all typed up then went to another page :(
>
>First off, doing this would abstract the messy details of the WM
>interface away from the Denu core. All the information about a
>particular WM is in one place. That will make it easier to maintain in
>the long run.
>
>Think of XMMS (or any other audio player). If they had every possible
>codec built into the core instead as of plugins, people would be
>updating daily. Instead they've got a standard API for an XMMS plugin,
>which makes it easy for developers to write new ones, and easy for
>users to add them.
>
>Second, it's a well-understood design model that works for other
>projects. I don't know if you're familiar with PHP's PEAR, but lots of
>their classes use this. Their DB package abstracts away lots of the
>gory details of dealing with specific databases. There's a skeleton
>class that defines a bunch of standard database methods: connect(),
>query(), disconnect(), blah. Then there are database-specific
>subclasses for mysql, pgsql, what have you which actually implement
>the API. An application using DB doesn't have to care about the
>details of a particular database, and switching the DB it talks to is
>as simple as changing one line of code. In theory, anyway.
>
>But it's not just a pretty design pattern. It solves the real problems
>I outlined, particularly with dependencies. I don't believe in
>reinventing wheels. If a WM provides already tools for doing something
>Denu needs, why rewrite them?
>
>Yes, it's a change to Denu's core, so you're right to be wary. But I
>think it'll make a better application in the long run.
>
>Matt
>
>  
>
Alright, so the next question is what actions to we need to cover and 
how will the core look.  Also, along with this major rewrite we also 
should change to using glade.  Would each module be a separate package?  
How would denu know what WMs are supported?
~Scott


From opo3fs at nifty.com  Thu Mar 17 10:26:38 2005
From: opo3fs at nifty.com (sada)
Date: Thu, 17 Mar 2005 17:26:38 +0800
Subject: [Denu-devel] =?GB2312?B?kdGTZJhigsyXoItaj1eWno3agZo=?=
Message-ID: <200503170926.j2H9QVN13531@bat.berlios.de>

?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^
?g???d?b?????Z?W?????I
http://sexily-manzoku.com/himityu/
?????????g?????H?`?t?HDoCoMo??{?[?_?t?H???????H
???????i?V?I?I???????I?g?N???????????I
http://sexily-manzoku.com/himityu/
---------?z?M???~????????????---------

theo_thierry at yahoo.com

?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^?Q?^


From mattkyn at gmail.com  Thu Mar 17 10:57:39 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Thu, 17 Mar 2005 09:57:39 +0000
Subject: [Denu-devel] RFC: Modularizing WM Functionality
In-Reply-To: <4238E8CA.5080405@comcast.net>
References: <e7ba781d05031605011abbd58c@mail.gmail.com>
	 <4238C94B.5060501@comcast.net>
	 <e7ba781d05031617346da3c5df@mail.gmail.com>
	 <4238E8CA.5080405@comcast.net>
Message-ID: <e7ba781d05031701574bad79b9@mail.gmail.com>

On Wed, 16 Mar 2005 18:17:46 -0800, Scott Shawcroft
<shux_linux at comcast.net> wrote:

> Alright, so the next question is what actions to we need to cover and
> how will the core look.

Well, there's nothing in the core right now that loads menus from the
WM, only from Denu's own saved menu.

I guess that needs to be addressed: if we're doing a major rewrite,
will Denu continue to keep it's own version of the menu saved, or will
it work natively with the menu of the currently running WM, exporting
that to different formats at the user's request?

For BC, I think we'll need a 'Denu' WM class, that loads and saves the
~/.denu/lastmenu.p. The  real question is whether there's anything to
be gained by keeping our own copy of the menus in future... I suspect
there is, but am not thinking well enough right now to say what it is
:|

> Also, along with this major rewrite we also
> should change to using glade.  Would each module be a separate package?

Do you mean, would a WM include glade files? Might be wrong, but there
shouldn't be any UI stuff attached to a WM, should there?

> How would denu know what WMs are supported?

We need two things: a module install script, and a simple registry
that gets pickled and loaded at program startup. It will contain a
list of the installed WMs and their capabilities, I was thinking
something like:
    registry = {'Gnome' : {[stuff about gnome]}, 'FluxBox' : {[stuff
about fluxbox]}}

The install script is pretty simple. It:
    1. instantiates the WM class
    2. finds out it's name, capabilities, etc
    3. copies them to the registry
    4. saves the registry

I could either be a separate script, or done with something like:

    $ denu --install-module /path/to/wm_module.py

Prob separate would be simpler, since we don't want it firing up the GUI.

More suggestions for methods the WM classes might need to support
(thinking out load):

I think in addition to capabilities, we'll need a property called
'signature'. This is the process we look for to detect if that WM is
running. So for Gnome:

    wm.signature = 'gnome-session'

That should also get copied to the registry on install, to avoid the
overhead of instantiating every WM module at startup.

We might also want:

   wm.system_commands = {'About' : '[command,icon,etc]', 'Help' :
'[command,etc]', ...}

This could be used for populating a WM-specific 'specials' box.
Doesn't need to be in the registry, though.

My method list:

    wm.load()
    wm.save(menu)
    wm.getName()                  # needed by the installer
    wm.getIconThemePath()   # would only be needed if we were going to use
                                              # the current theme's
own folder/app icons
                                              # in Denu's UI

I'll bang out a working version of the WM class along with some test
scripts and send 'em over so we can start playing with it - it's
always much easier to understand when there's something functioning
there.

I've just had a couple of small jobs crop up, though, so might not get
to it until end of the weekend.

I've also contacted the pyxdg developer about working together on the
editing functionality for that. He's right, it's not exactly a trivial
task, but helping develop that will help Denu deal with Gnome and KDE
too.

Is there any way to make denu-devel at lists.berlios.de automatically
make the 'Reply-To' go to the list, is there? I keep forgetting...

Matt


From shux_linux at comcast.net  Fri Mar 18 02:53:33 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Thu, 17 Mar 2005 17:53:33 -0800
Subject: [Denu-devel] RFC: Modularizing WM Functionality
In-Reply-To: <e7ba781d05031701574bad79b9@mail.gmail.com>
References: <e7ba781d05031605011abbd58c@mail.gmail.com>	 <4238C94B.5060501@comcast.net>	 <e7ba781d05031617346da3c5df@mail.gmail.com>	 <4238E8CA.5080405@comcast.net> <e7ba781d05031701574bad79b9@mail.gmail.com>
Message-ID: <423A349D.5010509@comcast.net>

Matt Kynaston wrote:

>On Wed, 16 Mar 2005 18:17:46 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>
>  
>
>>Alright, so the next question is what actions to we need to cover and
>>how will the core look.
>>    
>>
>
>Well, there's nothing in the core right now that loads menus from the
>WM, only from Denu's own saved menu.
>
>I guess that needs to be addressed: if we're doing a major rewrite,
>will Denu continue to keep it's own version of the menu saved, or will
>it work natively with the menu of the currently running WM, exporting
>that to different formats at the user's request?
>  
>
I think it depends on how we want to set it up.  We could have both options.

>For BC, I think we'll need a 'Denu' WM class, that loads and saves the
>~/.denu/lastmenu.p. The  real question is whether there's anything to
>be gained by keeping our own copy of the menus in future... I suspect
>there is, but am not thinking well enough right now to say what it is
>:|
>
>  
>
>>Also, along with this major rewrite we also
>>should change to using glade.  Would each module be a separate package?
>>    
>>
>
>Do you mean, would a WM include glade files? Might be wrong, but there
>shouldn't be any UI stuff attached to a WM, should there?
>  
>
No, I was just saying that if we are rewriting we might as well do that too.

>  
>
>>How would denu know what WMs are supported?
>>    
>>
>
>We need two things: a module install script, and a simple registry
>that gets pickled and loaded at program startup. It will contain a
>list of the installed WMs and their capabilities, I was thinking
>something like:
>    registry = {'Gnome' : {[stuff about gnome]}, 'FluxBox' : {[stuff
>about fluxbox]}}
>  
>
I would have the registry just store the 'stuff'.  The installed WMs 
should be detected at startup.

>The install script is pretty simple. It:
>    1. instantiates the WM class
>    2. finds out it's name, capabilities, etc
>    3. copies them to the registry
>    4. saves the registry
>
>I could either be a separate script, or done with something like:
>
>    $ denu --install-module /path/to/wm_module.py
>
>Prob separate would be simpler, since we don't want it firing up the GUI.
>
>  
>
Yeah, separate.

>More suggestions for methods the WM classes might need to support
>(thinking out load):
>
>I think in addition to capabilities, we'll need a property called
>'signature'. This is the process we look for to detect if that WM is
>running. So for Gnome:
>
>    wm.signature = 'gnome-session'
>  
>
Yeah, definately.

>That should also get copied to the registry on install, to avoid the
>overhead of instantiating every WM module at startup.
>
>We might also want:
>
>   wm.system_commands = {'About' : '[command,icon,etc]', 'Help' :
>'[command,etc]', ...}
>
>This could be used for populating a WM-specific 'specials' box.
>Doesn't need to be in the registry, though.
>  
>
Or just a WM info box.

>My method list:
>
>    wm.load()
>    wm.save(menu)
>    wm.getName()                  # needed by the installer
>    wm.getIconThemePath()   # would only be needed if we were going to use
>                                              # the current theme's
>own folder/app icons
>                                              # in Denu's UI
>
>I'll bang out a working version of the WM class along with some test
>scripts and send 'em over so we can start playing with it - it's
>always much easier to understand when there's something functioning
>there.
>
>I've just had a couple of small jobs crop up, though, so might not get
>to it until end of the weekend.
>
>  
>
Yeah, no problems.  I would like to make sure its we because I'd love to 
learn more.  When you want to I can hook you up as a dev.  That would 
allow us to use the svn.  It's no absolutely critical because I think 
we're on different time schedules so we wont be working on the code at 
the same time.

>I've also contacted the pyxdg developer about working together on the
>editing functionality for that. He's right, it's not exactly a trivial
>task, but helping develop that will help Denu deal with Gnome and KDE
>too.
>
>  
>
Yes, that would be another good way to give back.

>Is there any way to make denu-devel at lists.berlios.de automatically
>make the 'Reply-To' go to the list, is there? I keep forgetting...
>
>  
>
I just used reply to and deleted your email.  I don't know with gmail.

>Matt
>
~Scott


From sfiuury at d1.dion.ne.jp  Fri Mar 18 11:33:35 2005
From: sfiuury at d1.dion.ne.jp (fa)
Date: Fri, 18 Mar 2005 18:33:35 +0800
Subject: [Denu-devel] =?GB2312?B?gUaRsYFFg0WDj4NUgUWTc45zk2CQ4IFJgUmBSYFJ?=
Message-ID: <200503181033.j2IAXRN29486@bat.berlios.de>

?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/
?????????????????????I???????????????????????I
http://sunstory.info/ps/zoku-uwasa/
???????????n?????????u???????????????\???s?s?`???????v???????B
?????????????\???s?s?`?????????????L??????????!!
http://sunstory.info/ps/zoku-uwasa/

?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/?Q/

?s?s?`?????????????????????????????????I
???????????????????????B
paulresis at yahoo.com


From shux_linux at comcast.net  Sun Mar 20 00:32:24 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Sat, 19 Mar 2005 15:32:24 -0800
Subject: [Denu-devel] Denu in portage.
Message-ID: <423CB688.4040602@comcast.net>

The title says it all.  Thanks to blubb Denu is now in portage!
~Scott


From shux_linux at comcast.net  Mon Mar 21 05:03:56 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Sun, 20 Mar 2005 20:03:56 -0800
Subject: [Denu-devel] Denu in portage.
In-Reply-To: <e7ba781d0503201402fb81f12@mail.gmail.com>
References: <423CB688.4040602@comcast.net> <e7ba781d0503201402fb81f12@mail.gmail.com>
Message-ID: <423E47AC.8050007@comcast.net>

Matt Kynaston wrote:

>>The title says it all.  Thanks to blubb Denu is now in portage!
>>    
>>
>
>Hey, congrats!
>
>xdg.MenuEditor module is coming on. I now know far more about the
>freekin freedesktop spec and pyxml than I really wanted to ;)
>  
>
lol, I was just thinking about the next few versions of denu and where I 
want to take it.  I was frustrated that I was going to have to write it 
in on paper in the dark because the power was out, but it just came on. 
:-) Ah, I love the internet.  With that said here is a brief roadmap I 
had in my mind.

Version 2.4.x
    Implementation of config options using the config variable included 
as of 2.3.1.

Version 3.x.x
    Major rewrite further separating the WM modules from the denu 
interface.  Possible change of internet based info transfer and storage 
on the client-side.  Implementation of glade defined gui.  Code 
structure cleaned up.  Hopefully, documentation along with.  At a 
minimum recorded variable's and what each aspect is.  Also, at minimum 
documentation of the API for WM modules.

Also, should we explore pyxml to use with denu?

>Should have a first working version by tomorrow - will then get on
>with the WM stuff.
>
>  
>
Awesome, and remember I'm coding too.  Lets discuss further the overall 
structure and pertinant functions so that I can work on aspects too.

>Matt
>
>  
>
~Scott


From shux_linux at comcast.net  Mon Mar 21 07:40:00 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Sun, 20 Mar 2005 22:40:00 -0800
Subject: [Denu-devel] Administrative Note.
Message-ID: <423E6C40.20804@comcast.net>

I've changed a setting of the mailing lists to allow only members to 
post.  This should eliminate the spam that has been hitting the list.
Thanks everyone.
~Scott(tannewt)


From shux_linux at comcast.net  Mon Mar 21 15:41:02 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Mon, 21 Mar 2005 06:41:02 -0800
Subject: [Denu-devel] Denu in portage.
In-Reply-To: <e7ba781d05032102524482f1d2@mail.gmail.com>
References: <423CB688.4040602@comcast.net>	 <e7ba781d0503201402fb81f12@mail.gmail.com>	 <423E47AC.8050007@comcast.net> <e7ba781d05032102524482f1d2@mail.gmail.com>
Message-ID: <423EDCFE.2010607@comcast.net>

Matt Kynaston wrote:

>On Sun, 20 Mar 2005 20:03:56 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>  
>
>>With that said here is a brief roadmap I
>>had in my mind.
>>    
>>
>
>Sounds good.
>
>  
>
>>Also, should we explore pyxml to use with denu?
>>    
>>
>
>Definitely! If we want to be able to read in Gnome and KDE menus, it's
>about the only way. A chunk of the work I did last week was actually
>getting the menu parsing side following the standards to the letter,
>so that now that's passing the same regression tests as gnome-menus
>and kdesktop - the menus Denu would display would be exactly what the
>user's got.
>  
>
Awesome.  The more accurate the better.  Now we need to develop a better 
way of denu handling the menu.

>The editing functionality I'm adding requires pyxml. One of the weird
>things about python is that there's a million different XML modules,
>but it seems difficult to actually tell which one you're using, let
>alone find decent docs. I basically ended up with pyxml because I
>could find examples of feeding it a file and the rest follows DOM
>level 2 to the letter, so I could just use the specs to know what
>methods to use!
>
>I _think_ the only pyxml-specific functionality I'm using is for
>reading in the user's menu, so I might be able to switch back to the
>default xml.dom and get rid of that dependency. But Heinrich and I
>have been discussing moving away from xml.minidom in the parser for
>performance reasons, so I have a feeling the dependency will stay.
>
>  
>
>>Awesome, and remember I'm coding too.  Lets discuss further the overall
>>structure and pertinant functions so that I can work on aspects too.
>>    
>>
>
>OK.
>
>One thing I've been wondering... do applications install their
>.desktop files even if the user doesn't have Gnome/KDE? 
>
Yes I believe IF the app includes a .desktop file.  Not all do.

>They contain a
>lot of useful information (i18n program name, executable, icon, etc)
>that might be useful for the Denu DB. If they're there on the user's
>system anyway, might be worth checking them during SysUpdate?
>  
>
Very true and il8n is something we need to keep in mind for 3.x.x .

>Matt
>
>  
>
~Scott


From shux_linux at comcast.net  Tue Mar 22 00:56:44 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Mon, 21 Mar 2005 15:56:44 -0800
Subject: [Denu-devel] Denu in portage.
In-Reply-To: <e7ba781d050321083861b2fdc6@mail.gmail.com>
References: <423CB688.4040602@comcast.net>	 <e7ba781d0503201402fb81f12@mail.gmail.com>	 <423E47AC.8050007@comcast.net>	 <e7ba781d05032102524482f1d2@mail.gmail.com>	 <423EDCFE.2010607@comcast.net> <e7ba781d050321083861b2fdc6@mail.gmail.com>
Message-ID: <423F5F3C.7030409@comcast.net>

Matt Kynaston wrote:

>On Mon, 21 Mar 2005 06:41:02 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>
>  
>
>>Awesome.  The more accurate the better.  Now we need to develop a better
>>way of denu handling the menu.
>>    
>>
>
>In what way are you thinking?
>
>  
>
I say that because if you look at the generated menu file by denu for 
that spec it is sloppy.  It includes multiple 
<Include><Filename>file</Filename></Include>.  What we need to decide is 
if we want to take that approach or follow one more along the lines of 
KDE and Gnome.  They use include exclude also but not per filename.  
More accurately Gnome/KDE use the base, 'include everything with x 
category in folder x' while denu has it just include a file in its 
structure.  The way denu does it now seems to have more control over the 
actual contents of the menu versus the other method.  We also need to 
consider the <Layout> tag because with the freedesktop spec order is 
specified by the <layout> tag NOT the order of the actual entries like 
all other WMs.

>Might be OT, but what do you think about the internal representation
>of the menu being stored in XML? I dunno, maybe I've been hanging
>around xdg too long ;) I remember you saying that at least one of the
>WMs used XML to store the menus, and it's nice and intuitive and easy
>to transform.
>  
>
I think that its a definite possibility.  I have near to no experience 
with XML and its really a matter of teaching myself.  When you say 
internally in XML I'm confused on what that implies.  I know XML as a 
structure in a text file.  Please fill me in.

>Not sure on the approach for displaying it in the gtk tree, however.
>Three approaches - walk the XML tree creating the list for the tree,
>write a TreeStore that works with XML  - basically the same thing,
>encapsulated in a class (I'd be surprised if there wasn't one out
>there already) or use something like:
>http://www.logilab.org/projects/xmltools - don't know if it handles
>fancy stuff like drag-and-drop, though.
>  
>
That would probably work.  I'll ponder it more once I understand this 
XML business.

>  
>
>>Yes I believe IF the app includes a .desktop file.  Not all do.
>>    
>>
>
>Yup. Would have to look at a way of generating missing .desktops from
>the db for Gnome & KDE. Not difficult - pyxdg includes a DesktopEntry
>- the WM class just has to use that and it's hidden from Denu.
>  
>
That shouldn't be hard.  Its the menu control files I'm more concerned with.

>Where abouts are you? GMT-8 looks like west coast USA. Hope your
>weather's better than here in the UK!
>  
>
I'm near Seattle.  I live just west, across Puget Sound from Seattle.  I 
realize thats pretty detailed but oh well.  Our weather has been 
unusually dry.  I believe they've already declared a draught, its bad 
news.  The ski season was non-existant because of no snow.  It was wierd 
because we had a wind storm yesterday, which I hinted at because the 
power wasa out.  How's your weather?

>Matt
>
>  
>
~Scott


From mattkyn at gmail.com  Wed Mar 23 14:47:57 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Wed, 23 Mar 2005 13:47:57 +0000
Subject: [Denu-devel] Denu in portage.
In-Reply-To: <423F5F3C.7030409@comcast.net>
References: <423CB688.4040602@comcast.net>
	 <e7ba781d0503201402fb81f12@mail.gmail.com>
	 <423E47AC.8050007@comcast.net>
	 <e7ba781d05032102524482f1d2@mail.gmail.com>
	 <423EDCFE.2010607@comcast.net>
	 <e7ba781d050321083861b2fdc6@mail.gmail.com>
	 <423F5F3C.7030409@comcast.net>
Message-ID: <e7ba781d050323054727e29994@mail.gmail.com>

On Mon, 21 Mar 2005 15:56:44 -0800, Scott Shawcroft
<shux_linux at comcast.net> wrote:

> I say that because if you look at the generated menu file by denu for
> that spec it is sloppy.  It includes multiple
> <Include><Filename>file</Filename></Include>.  What we need to decide is
> if we want to take that approach or follow one more along the lines of
> KDE and Gnome.  They use include exclude also but not per filename.
> More accurately Gnome/KDE use the base, 'include everything with x
> category in folder x' while denu has it just include a file in its
> structure.  The way denu does it now seems to have more control over the
> actual contents of the menu versus the other method.  

Get your point. The freedesktop spec was designed for building
system-wide menus. It's actually pretty clever - when an application
installs itself it just has to drop files in specified locations and
it gets incorporated into the menu where ever the user likes that kind
of app. The complexity of the spec comes from that requirement, and
menu editing is a bit of an afterthought - to the point where it
wasn't until a month ago that a common 'user menu' file location was
decided on (which KDE 3.4's kmenuedit still does not use, BTW).

But like you say, we are building *user* menus, not system ones.
Conceptually it's pretty different - Denu users see a tree of programs
and shuffle things about till they're happy. They don't want to see a
bunch of complex rules: it's the Gnome WM module's role to take care
of translating what they see into something gnome-menus understands.

OK, if they're for a freedesktop WM we will probably want to give the
user the option to 'Add all programs in x category' and stuff like
that. But do we want to extend that functionality to other WMs? I
guess it would be nice, but could we? Let me think out loud...

First off everything in the Denu app database would need to be
categorized. We could use the info in existing .desktop files as a
basis for this. Then if Denu is being used on a WM that doesn't
support categorized menus, it would have to check on startup for new
programs, see what category they belong to, and offer the user the
choice to add them. That means it would need a way to remember the
user's category -> menu preferences between sessions.

So yeah, it's doable. But I think it would either mean reinventing
most of the freedesktop system, or lifting it wholesale and using it
'internally' for saving Denu's menus, then translating them into
non-freedesktop menus when the user clicks 'save'.

The way I see it, the pros are added functionality and leveraging an
open standard, the cons are added complexity and overhead. The
complexity part isn't really avoidable though, since we're parsing and
saving xdg menus for Gnome and KDE anyway. But still, it's a pretty
big shift, and a decision only you can make.

> We also need to
> consider the <Layout> tag because with the freedesktop spec order is
> specified by the <layout> tag NOT the order of the actual entries like
> all other WMs.

Not such a big deal - the pyxdg menu parser takes care of it for you,
and the WM module can translate any changes the user makes into to
required <Layout> tags. Leave that part to me ;)

> I think that its a definite possibility.  I have near to no experience
> with XML and its really a matter of teaching myself.  

It's overhyped ;) You know what it looks like already, and
manipulating it with python's minidom is pretty easy once you get the
hang of it. Shout if you want some tutorial links.

> When you say
> internally in XML I'm confused on what that implies.

I was talking about the format Denu uses to save it's own version of
the user's menu between sessions. Right now it's pickling the
TreeStore, which works fine so long as they remain 'flat' - ie contain
a fixed number of columns. Saving them in XML is more flexible - they
could contain any number of 'columns' - and would mean that they could
be examined and edited by anyone with a text reader, but it's only one
format - there's lots of choices.

> I'm near Seattle.  I live just west, across Puget Sound from Seattle.  I
> realize thats pretty detailed but oh well.  

No, not too detailed for this ex-Vancouverite! My family moved to
Sidney BC when I was eight then moved back here when I finished I
school. I decided the UK was crap and went back to Vancouver. But I've
bummed around the globe a bit since then, and am for some reason am
back here again.

> How's your weather?

A lovely spring day. And I'm tied to my computer :(

Matt


From shux_linux at comcast.net  Thu Mar 24 02:04:25 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Wed, 23 Mar 2005 17:04:25 -0800
Subject: [Denu-devel] Denu in portage.
In-Reply-To: <e7ba781d050323054727e29994@mail.gmail.com>
References: <423CB688.4040602@comcast.net>	 <e7ba781d0503201402fb81f12@mail.gmail.com>	 <423E47AC.8050007@comcast.net>	 <e7ba781d05032102524482f1d2@mail.gmail.com>	 <423EDCFE.2010607@comcast.net>	 <e7ba781d050321083861b2fdc6@mail.gmail.com>	 <423F5F3C.7030409@comcast.net> <e7ba781d050323054727e29994@mail.gmail.com>
Message-ID: <42421219.6040405@comcast.net>

Matt Kynaston wrote:

>On Mon, 21 Mar 2005 15:56:44 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>
>  
>
>>I say that because if you look at the generated menu file by denu for
>>that spec it is sloppy.  It includes multiple
>><Include><Filename>file</Filename></Include>.  What we need to decide is
>>if we want to take that approach or follow one more along the lines of
>>KDE and Gnome.  They use include exclude also but not per filename.
>>More accurately Gnome/KDE use the base, 'include everything with x
>>category in folder x' while denu has it just include a file in its
>>structure.  The way denu does it now seems to have more control over the
>>actual contents of the menu versus the other method.  
>>    
>>
>
>Get your point. The freedesktop spec was designed for building
>system-wide menus. It's actually pretty clever - when an application
>installs itself it just has to drop files in specified locations and
>it gets incorporated into the menu where ever the user likes that kind
>of app. The complexity of the spec comes from that requirement, and
>menu editing is a bit of an afterthought - to the point where it
>wasn't until a month ago that a common 'user menu' file location was
>decided on (which KDE 3.4's kmenuedit still does not use, BTW).
>  
>
So very true.  An example of this is that one of the games I installed 
started in fullscreen mode so I changed the entry to add '-w' to the 
command so it didn't.  With the freedesktop spec that would be done by 
hunting down the .desktop file and/or copying it to the user's directory 
so it didn't screw up everyones menu.

>But like you say, we are building *user* menus, not system ones.
>Conceptually it's pretty different - Denu users see a tree of programs
>and shuffle things about till they're happy. They don't want to see a
>bunch of complex rules: it's the Gnome WM module's role to take care
>of translating what they see into something gnome-menus understands.
>  
>
I understand that abstraction.  I'm right with you.

>OK, if they're for a freedesktop WM we will probably want to give the
>user the option to 'Add all programs in x category' and stuff like
>that. But do we want to extend that functionality to other WMs? I
>guess it would be nice, but could we? Let me think out loud...
>
>First off everything in the Denu app database would need to be
>categorized. We could use the info in existing .desktop files as a
>basis for this. Then if Denu is being used on a WM that doesn't
>support categorized menus, it would have to check on startup for new
>programs, see what category they belong to, and offer the user the
>choice to add them. That means it would need a way to remember the
>user's category -> menu preferences between sessions.
>  
>
This idea of categories already exists within denu.  You can find its 
interpreter kinda thing in the autogen function or its equivalent.  Save 
your menu and have an empty you and click autofill.  If you were to look 
in the database you'd see something like this, '|Net|Browsers' per 
entry.  It defines that the entry needs to be put in the Browsers 
sub-menu of Net.  So what we could do is use those existing definitions 
to translate to categories.  We could also derive categories from the 
beginning of the portage as id as I call it.  For denu this is x11-misc 
and it could translate to the Utilities category.

>So yeah, it's doable. But I think it would either mean reinventing
>most of the freedesktop system, or lifting it wholesale and using it
>'internally' for saving Denu's menus, then translating them into
>non-freedesktop menus when the user clicks 'save'.
>
>The way I see it, the pros are added functionality and leveraging an
>open standard, the cons are added complexity and overhead. The
>complexity part isn't really avoidable though, since we're parsing and
>saving xdg menus for Gnome and KDE anyway. But still, it's a pretty
>big shift, and a decision only you can make.
>  
>
The idea of promoting an open standard seems to me, flawed.  I think 
that the freedesktop standard has flaws we've already discussed.  I also 
hesitate to call it a standard for all WMs because as far as I know its 
only a standard agreed upon by Gnome and KDE.  Both of which have 
different interests than many WMs.  Gnome/KDE  seem to lean toward the 
'all I want to do is check my email' crowd.  This is most prevalent with 
the absence of thought about adaptability when the standard was 
created.  A more sensible standard I believe is a simple text file with 
a standard format, not an XML which takes info from multitudes of 
files.  I lean toward making denu deal with the standard but not run of 
the standard.  I say this because I believe that the Free Desktop 
standard is unpolished and its success is undetermined.  Again I'll 
point to Xfce4's menus, they provide the best of both worlds.  I would 
have denu not cater to any WM especially the freedesktop spec because 
catering to one makes it tougher for others.  It seems that the audience 
of denu is between the 'all I want to do is check my email' user and the 
'I'll end the text files thank you very much' user.  It aims at the 'Yes 
I want to customize my menus but I dont want to find what I have 
installed and what its related binaries are called.

I feel that I should clarify about my role.  I may have sound harsh that 
I wanted to be a part of it.  I'm in it for the lesson and because it 
was an itch that needed to be scratched.  The reason I might have taken 
too much of a this is mine dont touch stance is because I'm afraid of 
someone more experienced than my self replacing me.  It still is my 
program but I love the help.

>  
>
>>We also need to
>>consider the <Layout> tag because with the freedesktop spec order is
>>specified by the <layout> tag NOT the order of the actual entries like
>>all other WMs.
>>    
>>
>
>Not such a big deal - the pyxdg menu parser takes care of it for you,
>and the WM module can translate any changes the user makes into to
>required <Layout> tags. Leave that part to me ;)
>
>  
>
Something tells me you'll be writing the FD module. ;-)

>>I think that its a definite possibility.  I have near to no experience
>>with XML and its really a matter of teaching myself.  
>>    
>>
>
>It's overhyped ;) You know what it looks like already, and
>manipulating it with python's minidom is pretty easy once you get the
>hang of it. Shout if you want some tutorial links.
>  
>
Please.

>  
>
>>When you say
>>internally in XML I'm confused on what that implies.
>>    
>>
>
>I was talking about the format Denu uses to save it's own version of
>the user's menu between sessions. Right now it's pickling the
>TreeStore, which works fine so long as they remain 'flat' - ie contain
>a fixed number of columns. Saving them in XML is more flexible - they
>could contain any number of 'columns' - and would mean that they could
>be examined and edited by anyone with a text reader, but it's only one
>format - there's lots of choices.
>  
>
Agreed.  In fact it would great as a menu standard.  lol

>  
>
>>I'm near Seattle.  I live just west, across Puget Sound from Seattle.  I
>>realize thats pretty detailed but oh well.  
>>    
>>
>
>No, not too detailed for this ex-Vancouverite! My family moved to
>Sidney BC when I was eight then moved back here when I finished I
>school. I decided the UK was crap and went back to Vancouver. But I've
>bummed around the globe a bit since then, and am for some reason am
>back here again.
>
>  
>
Cool.

>>How's your weather?
>>    
>>
>
>A lovely spring day. And I'm tied to my computer :(
>  
>
Ah, work?

>Matt
>_______________________________________________
>Denu-devel mailing list
>Denu-devel at lists.berlios.de
>http://lists.berlios.de/mailman/listinfo/denu-devel
>
>  
>
~Scott


From shux_linux at comcast.net  Thu Mar 24 05:16:41 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Wed, 23 Mar 2005 20:16:41 -0800
Subject: [Denu-devel] Denu 3.x Todo
Message-ID: <42423F29.7050000@comcast.net>

Alright here is the skeleton if you will for denu 3.x structure.

Denu Modules -
    Free Desktop
    Fluxbox
    Openbox
    Waimea
    IceWM
    Xfce4

These modules would consist of these functions.
    Import
    Export

They would also include a config variable with this information.
    Name
    Executable to define installation.
    Version
    Supported features.  (do we need this or can an installed module 
ignore extra info?)

The changes needed to the main denu file are.
    Glade support.
    Localization.
    Themes.
    'Add all from category.'
    Save denu menus as XML.

Things we should also evaluate are denu's internet based DB and its 
efficiency in transferring data and its ability to expand and support 
multiple languages.

This is just a combination of ideas.  Please add stuff as needed because 
I'm sure I forgot things.
~Scott


From mattkyn at gmail.com  Thu Mar 24 10:42:28 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Thu, 24 Mar 2005 09:42:28 +0000
Subject: [Denu-devel] Denu 3.x Todo
In-Reply-To: <42423F29.7050000@comcast.net>
References: <42423F29.7050000@comcast.net>
Message-ID: <e7ba781d050324014252053388@mail.gmail.com>

On Wed, 23 Mar 2005 20:16:41 -0800, Scott Shawcroft
<shux_linux at comcast.net> wrote:

>     Localization.

How does python normally handle this with applicaiton text? gettext
and .po files? It's pretty important to nail that early on, 'cause
adding it later to every string is a real pain (been there...)

Matt


From shux_linux at comcast.net  Thu Mar 24 17:21:42 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Thu, 24 Mar 2005 08:21:42 -0800
Subject: [Denu-devel] Denu 3.x Todo
In-Reply-To: <e7ba781d05032401383451dc4e@mail.gmail.com>
References: <42423F29.7050000@comcast.net> <e7ba781d05032401383451dc4e@mail.gmail.com>
Message-ID: <4242E916.7030601@comcast.net>

Matt Kynaston wrote:

>On Wed, 23 Mar 2005 20:16:41 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>  
>
>>Alright here is the skeleton if you will for denu 3.x structure.
>>    
>>
>
>Looks good.
> 
>  
>
>>Denu Modules -
>>    Free Desktop
>>    Fluxbox
>>    Openbox
>>    Waimea
>>    IceWM
>>    Xfce4
>>    
>>
>
>Enlightenment?
>  
>
Yup, forgot.

> 
>  
>
>>    Supported features.  (do we need this or can an installed module
>>ignore extra info?)
>>    
>>
>
>Yes it should. My original idea was to use this to alert Denu that and
>extra was available, so it could add it to the UI if it wanted.
>
>  
>
Alright.  How should/can we deal with adding UI stuff as defined by a 
module?
In response to your other email I have no idea about localization.  What 
I've done in python is what you see in denu.  I'll look into it.
~Scott

>There'll prob be more :)
>
>Matt
>
>  
>



From mattkyn at gmail.com  Thu Mar 24 19:28:29 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Thu, 24 Mar 2005 18:28:29 +0000
Subject: [Denu-devel] Denu 3.x Todo
In-Reply-To: <4242E916.7030601@comcast.net>
References: <42423F29.7050000@comcast.net>
	 <e7ba781d05032401383451dc4e@mail.gmail.com>
	 <4242E916.7030601@comcast.net>
Message-ID: <e7ba781d05032410281a99c0b1@mail.gmail.com>

On Thu, 24 Mar 2005 08:21:42 -0800, Scott Shawcroft
<shux_linux at comcast.net> wrote:
> Matt Kynaston wrote:
> 
> >On Wed, 23 Mar 2005 20:16:41 -0800, Scott Shawcroft
> ><shux_linux at comcast.net> wrote:

> >Enlightenment?
> >
> Yup, forgot.

Plus the various panels, if we're going to do that.

> Alright.  How should/can we deal with adding UI stuff as defined by a
> module?

Shouldn't be complicated. I was thinking something along the lines of:

if registry.WMSupports('Gnome', 'icons'):
    show_icon_widget()

> In response to your other email I have no idea about localization.  What
> I've done in python is what you see in denu.  I'll look into it.

http://www.python.org/doc/2.4/lib/module-gettext.html
The real joy is writing the translation files :)

Matt


From shux_linux at comcast.net  Thu Mar 24 21:07:28 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Thu, 24 Mar 2005 12:07:28 -0800
Subject: [Denu-devel] Denu 3.x Todo
In-Reply-To: <e7ba781d05032410281a99c0b1@mail.gmail.com>
References: <42423F29.7050000@comcast.net>	 <e7ba781d05032401383451dc4e@mail.gmail.com>	 <4242E916.7030601@comcast.net> <e7ba781d05032410281a99c0b1@mail.gmail.com>
Message-ID: <42431E00.8060002@comcast.net>

Matt Kynaston wrote:

>On Thu, 24 Mar 2005 08:21:42 -0800, Scott Shawcroft
><shux_linux at comcast.net> wrote:
>  
>
>>Matt Kynaston wrote:
>>
>>    
>>
>>>On Wed, 23 Mar 2005 20:16:41 -0800, Scott Shawcroft
>>><shux_linux at comcast.net> wrote:
>>>      
>>>
>
>  
>
>>>Enlightenment?
>>>
>>>      
>>>
>>Yup, forgot.
>>    
>>
>
>Plus the various panels, if we're going to do that.
>
>  
>
Yes, but those can be added later.  We just need to consider their 
functionality when we rewrite it.

>>Alright.  How should/can we deal with adding UI stuff as defined by a
>>module?
>>    
>>
>
>Shouldn't be complicated. I was thinking something along the lines of:
>
>if registry.WMSupports('Gnome', 'icons'):
>    show_icon_widget()
>
>  
>
Ah, I see.  So we'd write all the options in functions in denu and call 
them from the module.

>>In response to your other email I have no idea about localization.  What
>>I've done in python is what you see in denu.  I'll look into it.
>>    
>>
>
>http://www.python.org/doc/2.4/lib/module-gettext.html
>The real joy is writing the translation files :)
>  
>
We could just focus on supporting it and having other people volunteer 
to translate.  I speak English and know a little German.

>Matt
>
>  
>



From blubb at gentoo.org  Thu Mar 24 22:17:02 2005
From: blubb at gentoo.org (Simon Stelling)
Date: Thu, 24 Mar 2005 21:17:02 +0000
Subject: [Denu-devel] Denu 3.x Todo
In-Reply-To: <42431E00.8060002@comcast.net>
References: <42423F29.7050000@comcast.net>	 <e7ba781d05032401383451dc4e@mail.gmail.com>	 <4242E916.7030601@comcast.net> <e7ba781d05032410281a99c0b1@mail.gmail.com> <42431E00.8060002@comcast.net>
Message-ID: <42432E4E.6000301@gentoo.org>

Hi,

Scott Shawcroft wrote:
> We could just focus on supporting it and having other people volunteer 
> to translate.  I speak English and know a little German.

I speak german fluently, just ping me when you need some help ;)

Greetings,

blubb


From shux_linux at comcast.net  Fri Mar 25 08:13:37 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Thu, 24 Mar 2005 23:13:37 -0800
Subject: [Denu-devel] denu 3.x idea
Message-ID: <4243BA21.7090603@comcast.net>

I just had an idea.  (Love it when I do.)  I was just adding two 
programs to my menu and I was think of how adding an entry should be 
done and where it placed in the menu structure.  I was thinking that it 
would be cool to have an option where denu would put an entry in a 
default folder.  A guess if you will.  It would guess within reason 
where to put the entry within the existing structure.  That would only 
be an option.  Another option would be like it is now and a third would 
be some sort of drag and drop capability.  I'll have to look into it in 
more detail.  Thats just a random set of ideas.
~Scott


From shux_linux at comcast.net  Sat Mar 26 03:45:26 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Fri, 25 Mar 2005 18:45:26 -0800
Subject: [Denu-devel] Internal Format
Message-ID: <4244CCC6.5010604@comcast.net>

Matt,
How do we want to store the menu within denu.  Should we store it
similar to it is now?  Should we keep two concurrent versions, one XML
one for the treeestore?  I think import/exporting to XML will work. 
Similar to it is now.  Do you think that any methods on updating the
database and its client side files would be better?  All of these issues
need to be discussed before the core can be created.
~Scott


From mattkyn at gmail.com  Sat Mar 26 10:39:17 2005
From: mattkyn at gmail.com (Matt Kynaston)
Date: Sat, 26 Mar 2005 09:39:17 +0000
Subject: [Denu-devel] Internal Format
In-Reply-To: <4244CCC6.5010604@comcast.net>
References: <4244CCC6.5010604@comcast.net>
Message-ID: <e7ba781d05032601397bac7a3e@mail.gmail.com>

On Fri, 25 Mar 2005 18:45:26 -0800, Scott Shawcroft
<shux_linux at comcast.net> wrote:
> Matt,
> How do we want to store the menu within denu.  Should we store it
> similar to it is now?  Should we keep two concurrent versions, one XML
> one for the treeestore?  I think import/exporting to XML will work.

No? Any particular reason?

Like I tried to say before, the problem with the current TreeStore is
that it I don't see think it will be very flexible when it comes to
handling variable amounts of data. You've basically got a structure
something like at table (sorry for the bad ascii art):

+-------------------------------+--------+--------------+-----------+------------+

| Icon                          | Name   | Executable   | Comment   |
Name[es]   |
+-------------------------------+--------+--------------+-----------+------------+
| /usr/share/pixmaps/folder.svg | Apps   |              |           | 
          |
+-------------------------------+--------+--------------+-----------+------------+

| /usr/share/pixmaps/app.svg    | My App | /usr/bin/app | Nice prog |
Hola mundo |
+-------------------------------+--------+--------------+-----------+------------+

If you want to add a Name[de] column (or anything else) every item in
the table has to be expanded.

With hierarchical structures, you don't have that problem. In XML, the
above could look something like:

<menu name="Apps">
  <app name="My App" executable="/usr/bin/app">
    <icon>/usr/share/pixmaps/app.svg</icon>
    <comment>Nice prog</comment>
    <name xml:lang="es">Hola Mundo</name>
  </app>
  <menu name="Submenu">
     <!-- more stuff -->
  </menu>
</menu>

You can just keep adding stuff inside the <menu> and <app> tags
without breaking the original structure.

You could also do the same thing with objects:

class Menu:
    parent = None
    name = ''
    icon = ''
    apps = []
    submenus = []

class App:
    parent = None
    name = ''
    icon = ''
    comment = ''
    name_loc = []

mymenu = Menu()
mymenu.name = 'Apps'
mymenu.icon = '/usr/share/pixmaps/folder.svg'

myapp = App()
myapp.name = 'My App'
myapp.icon = '/usr/share/pixmaps'
myapp.comment = 'Nice prog'
myapp.name_loc['es'] = 'Hola mundo'
myapp.parent = mymenu

mymenu.children.append(myapp)

In many ways, the XML and object approach are identical, since python
converts the XML to a tree of objects when it's parsed. The only
practical difference is that one would be stored as a human-readable
text file, the other as not-so-readable cPickle object.

Anyway, sun is shining and I'm off down to my brother's boat for the
first sail of the season :) I'd hoped to finally get the pyxdg stuff
out the door before I left. It's nearly there, but every time I turn
around it bites me somewhere new :| Back Tues.

Happy Easter!

Matt


From shux_linux at comcast.net  Mon Mar 28 08:11:22 2005
From: shux_linux at comcast.net (Scott Shawcroft)
Date: Sun, 27 Mar 2005 22:11:22 -0800
Subject: [Denu-devel] Two more things...
Message-ID: <4247A00A.50306@comcast.net>

I've just had two more ideas.  In denu we need to have tips that display
on mouseovers.  (Forgot the name.)  And we also need to include a tips
and tricks at the start up of denu.  Also, now that my brains going,
automatically filling the installed side of things upon initial install
should save some confusion.
Those are my random thoughts.
~Scott


